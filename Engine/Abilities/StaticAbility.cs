using Common;
using Engine.ContinuousEffects;
using System.Collections.Generic;
using System.Linq;

namespace Engine.Abilities
{
    /// <summary>
    /// 604.1.
    /// Static abilities do something all the time rather than being activated or triggered.
    /// They are written as statements, and they’re simply true.
    /// </summary>
    public class StaticAbility : Ability, IStaticAbility
    {
        private readonly List<IContinuousEffect> _continuousEffects = new();

        /// <summary>
        /// 604.2.
        /// Static abilities create continuous effects, some of which are prevention effects or replacement effects.
        /// </summary>
        public IEnumerable<IContinuousEffect> ContinuousEffects => _continuousEffects;

        /// <summary>
        /// 604.2.
        /// Effects generated by the static ability are active as long as the card with the ability remains on the battle zone and has the ability,
        /// or as long as the card with the ability remains in the appropriate zone.
        /// </summary>
        public ZoneType FunctionZone { get; set; } = ZoneType.BattleZone;

        public StaticAbility(IContinuousEffect continuousEffect) : base()
        {
            _continuousEffects.Add(continuousEffect);
        }

        private StaticAbility(StaticAbility ability) : base(ability)
        {
            _continuousEffects = ability._continuousEffects.Select(x => x.Copy()).ToList();
            FunctionZone = ability.FunctionZone;
        }

        public sealed override IAbility Copy()
        {
            return new StaticAbility(this);
        }

        public sealed override string ToString()
        {
            return string.Join(" ", _continuousEffects.Select(x => UpperCaseFirstCharacter(x.ToString())));
        }
    }
}
