using System;

namespace Engine.Durations
{
    /// <summary>
    /// A continuous effect generated by the resolution of a spell or ability lasts as long as stated by the spell or ability creating it (such as “until end of turn”). If no duration is stated, it lasts until the end of the game.
    /// </summary>
    public abstract class Duration : ICopyable<IDuration>, IDuration
    {
        public abstract IDuration Copy();

        public void Dispose()
        {
            Dispose(true);
            GC.SuppressFinalize(this);
        }

        protected virtual void Dispose(bool disposing)
        {
            if (disposing)
            {
            }
        }

        public override abstract string ToString();
    }
}
