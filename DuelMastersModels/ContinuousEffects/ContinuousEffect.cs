using DuelMastersModels.Durations;
using System;

namespace DuelMastersModels.ContinuousEffects
{
    /// <summary>
    /// 611.1. A continuous effect modifies characteristics of objects, modifies control of objects, or affects players or the rules of the game, for a fixed or indefinite period.
    /// </summary>
    public abstract class ContinuousEffect : IDisposable
    {
        /// <summary>
        /// A continuous effect generated by the resolution of a spell or ability lasts as long as stated by the spell or ability creating it (such as “until end of turn”). If no duration is stated, it lasts until the end of the game.
        /// </summary>
        public Duration Duration { get; set; }

        /// <summary>
        /// Filter that can be applied to find cards affected by the effect.
        /// </summary>
        public CardFilter Filter { get; set; }

        public Guid SourceAbility { get; internal set; }

        public virtual bool IsActive(Game game, Card card)
        {
            return true;
        }

        protected ContinuousEffect(CardFilter filter, Duration duration)
        {
            Filter = filter;
            Duration = duration;
        }

        protected ContinuousEffect(ContinuousEffect effect)
        {
            Duration = effect.Duration.Copy();
            Filter = effect.Filter?.Copy();
            SourceAbility = effect.SourceAbility;
        }

        public abstract ContinuousEffect Copy();

        public void Dispose()
        {
            Dispose(true);
            GC.SuppressFinalize(this);
        }

        protected virtual void Dispose(bool disposing)
        {
            if (disposing)
            {
                Duration.Dispose();
                Duration = null;
                Filter.Dispose();
                Filter = null;
                SourceAbility = Guid.Empty;
            }
        }
    }
}
