{"ast":null,"code":"/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Inject, Injectable, Optional, PLATFORM_ID, NgModule, defineInjectable, inject } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\nimport * as ɵngcc0 from '@angular/core';\nconst hasV8BreakIterator = typeof Intl !== 'undefined' &&\n/** @type {?} */\nIntl.v8BreakIterator;\n/**\n * Service to detect the current platform by comparing the userAgent strings and\n * checking browser-specific global properties.\n */\n\nclass Platform {\n  /**\n   * \\@breaking-change 8.0.0 remove optional decorator\n   * @param {?=} _platformId\n   */\n  constructor(_platformId) {\n    this._platformId = _platformId;\n    /**\n     * Whether the Angular application is being rendered in the browser.\n     * We want to use the Angular platform check because if the Document is shimmed\n     * without the navigator, the following checks will fail. This is preferred because\n     * sometimes the Document may be shimmed without the user's knowledge or intention\n     */\n\n    this.isBrowser = this._platformId ? isPlatformBrowser(this._platformId) : typeof document === 'object' && !!document;\n    /**\n     * Whether the current browser is Microsoft Edge.\n     */\n\n    this.EDGE = this.isBrowser && /(edge)/i.test(navigator.userAgent);\n    /**\n     * Whether the current rendering engine is Microsoft Trident.\n     */\n\n    this.TRIDENT = this.isBrowser && /(msie|trident)/i.test(navigator.userAgent);\n    /**\n     * Whether the current rendering engine is Blink.\n     */\n\n    this.BLINK = this.isBrowser && !!(\n    /** @type {?} */\n    window.chrome || hasV8BreakIterator) && typeof CSS !== 'undefined' && !this.EDGE && !this.TRIDENT;\n    /**\n     * Whether the current rendering engine is WebKit.\n     */\n\n    this.WEBKIT = this.isBrowser && /AppleWebKit/i.test(navigator.userAgent) && !this.BLINK && !this.EDGE && !this.TRIDENT;\n    /**\n     * Whether the current platform is Apple iOS.\n     */\n\n    this.IOS = this.isBrowser && /iPad|iPhone|iPod/.test(navigator.userAgent) && !('MSStream' in window);\n    /**\n     * Whether the current browser is Firefox.\n     */\n\n    this.FIREFOX = this.isBrowser && /(firefox|minefield)/i.test(navigator.userAgent);\n    /**\n     * Whether the current platform is Android.\n     */\n\n    this.ANDROID = this.isBrowser && /android/i.test(navigator.userAgent) && !this.TRIDENT;\n    /**\n     * Whether the current browser is Safari.\n     */\n\n    this.SAFARI = this.isBrowser && /safari/i.test(navigator.userAgent) && this.WEBKIT;\n  }\n\n}\n\nPlatform.ɵfac = function Platform_Factory(t) {\n  return new (t || Platform)(ɵngcc0.ɵɵinject(PLATFORM_ID, 8));\n};\n\nPlatform.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: Platform,\n  factory: Platform.ɵfac,\n  providedIn: 'root'\n});\n/** @nocollapse */\n\nPlatform.ctorParameters = () => [{\n  type: Object,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [PLATFORM_ID]\n  }]\n}];\n/** @nocollapse */\n\n\nPlatform.ngInjectableDef = defineInjectable({\n  factory: function Platform_Factory() {\n    return new Platform(inject(PLATFORM_ID, 8));\n  },\n  token: Platform,\n  providedIn: \"root\"\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Platform, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: Object,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n\nclass PlatformModule {}\n\nPlatformModule.ɵfac = function PlatformModule_Factory(t) {\n  return new (t || PlatformModule)();\n};\n\nPlatformModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: PlatformModule\n});\nPlatformModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PlatformModule, [{\n    type: NgModule\n  }], null, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/** *\n * Cached result Set of input types support by the current browser.\n  @type {?} */\n\n\nlet supportedInputTypes;\n/** *\n * Types of `<input>` that *might* be supported.\n  @type {?} */\n\nconst candidateInputTypes = ['color', 'button', 'checkbox', 'date', 'datetime-local', 'email', 'file', 'hidden', 'image', 'month', 'number', 'password', 'radio', 'range', 'reset', 'search', 'submit', 'tel', 'text', 'time', 'url', 'week'];\n/**\n * @return {?} The input types supported by this browser.\n */\n\nfunction getSupportedInputTypes() {\n  // Result is cached.\n  if (supportedInputTypes) {\n    return supportedInputTypes;\n  } // We can't check if an input type is not supported until we're on the browser, so say that\n  // everything is supported when not on the browser. We don't use `Platform` here since it's\n  // just a helper function and can't inject it.\n\n\n  if (typeof document !== 'object' || !document) {\n    supportedInputTypes = new Set(candidateInputTypes);\n    return supportedInputTypes;\n  }\n  /** @type {?} */\n\n\n  let featureTestInput = document.createElement('input');\n  supportedInputTypes = new Set(candidateInputTypes.filter(value => {\n    featureTestInput.setAttribute('type', value);\n    return featureTestInput.type === value;\n  }));\n  return supportedInputTypes;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/** *\n * Cached result of whether the user's browser supports passive event listeners.\n  @type {?} */\n\n\nlet supportsPassiveEvents;\n/**\n * Checks whether the user's browser supports passive event listeners.\n * See: https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\n * @return {?}\n */\n\nfunction supportsPassiveEventListeners() {\n  if (supportsPassiveEvents == null && typeof window !== 'undefined') {\n    try {\n      window.addEventListener('test',\n      /** @type {?} */\n      null, Object.defineProperty({}, 'passive', {\n        get: () => supportsPassiveEvents = true\n      }));\n    } finally {\n      supportsPassiveEvents = supportsPassiveEvents || false;\n    }\n  }\n\n  return supportsPassiveEvents;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/** @enum {number} */\n\n\nvar RtlScrollAxisType = {\n  /**\n     * scrollLeft is 0 when scrolled all the way left and (scrollWidth - clientWidth) when scrolled\n     * all the way right.\n     */\n  NORMAL: 0,\n\n  /**\n     * scrollLeft is -(scrollWidth - clientWidth) when scrolled all the way left and 0 when scrolled\n     * all the way right.\n     */\n  NEGATED: 1,\n\n  /**\n     * scrollLeft is (scrollWidth - clientWidth) when scrolled all the way left and 0 when scrolled\n     * all the way right.\n     */\n  INVERTED: 2\n};\nRtlScrollAxisType[RtlScrollAxisType.NORMAL] = 'NORMAL';\nRtlScrollAxisType[RtlScrollAxisType.NEGATED] = 'NEGATED';\nRtlScrollAxisType[RtlScrollAxisType.INVERTED] = 'INVERTED';\n/** *\n * Cached result of the way the browser handles the horizontal scroll axis in RTL mode.\n  @type {?} */\n\nlet rtlScrollAxisType;\n/**\n * Check whether the browser supports scroll behaviors.\n * @return {?}\n */\n\nfunction supportsScrollBehavior() {\n  return !!(typeof document == 'object' && 'scrollBehavior' in\n  /** @type {?} */\n  document.documentElement.style);\n}\n/**\n * Checks the type of RTL scroll axis used by this browser. As of time of writing, Chrome is NORMAL,\n * Firefox & Safari are NEGATED, and IE & Edge are INVERTED.\n * @return {?}\n */\n\n\nfunction getRtlScrollAxisType() {\n  // We can't check unless we're on the browser. Just assume 'normal' if we're not.\n  if (typeof document !== 'object' || !document) {\n    return RtlScrollAxisType.NORMAL;\n  }\n\n  if (!rtlScrollAxisType) {\n    /** @type {?} */\n    const scrollContainer = document.createElement('div');\n    /** @type {?} */\n\n    const containerStyle = scrollContainer.style;\n    scrollContainer.dir = 'rtl';\n    containerStyle.height = '1px';\n    containerStyle.width = '1px';\n    containerStyle.overflow = 'auto';\n    containerStyle.visibility = 'hidden';\n    containerStyle.pointerEvents = 'none';\n    containerStyle.position = 'absolute';\n    /** @type {?} */\n\n    const content = document.createElement('div');\n    /** @type {?} */\n\n    const contentStyle = content.style;\n    contentStyle.width = '2px';\n    contentStyle.height = '1px';\n    scrollContainer.appendChild(content);\n    document.body.appendChild(scrollContainer);\n    rtlScrollAxisType = RtlScrollAxisType.NORMAL; // The viewport starts scrolled all the way to the right in RTL mode. If we are in a NORMAL\n    // browser this would mean that the scrollLeft should be 1. If it's zero instead we know we're\n    // dealing with one of the other two types of browsers.\n\n    if (scrollContainer.scrollLeft === 0) {\n      // In a NEGATED browser the scrollLeft is always somewhere in [-maxScrollAmount, 0]. For an\n      // INVERTED browser it is always somewhere in [0, maxScrollAmount]. We can determine which by\n      // setting to the scrollLeft to 1. This is past the max for a NEGATED browser, so it will\n      // return 0 when we read it again.\n      scrollContainer.scrollLeft = 1;\n      rtlScrollAxisType = scrollContainer.scrollLeft === 0 ? RtlScrollAxisType.NEGATED : RtlScrollAxisType.INVERTED;\n    }\n    /** @type {?} */\n\n\n    scrollContainer.parentNode.removeChild(scrollContainer);\n  }\n\n  return rtlScrollAxisType;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n\nexport { Platform, PlatformModule, getSupportedInputTypes, supportsPassiveEventListeners, supportsScrollBehavior, getRtlScrollAxisType, RtlScrollAxisType };","map":{"version":3,"names":["Inject","Injectable","Optional","PLATFORM_ID","NgModule","defineInjectable","inject","isPlatformBrowser","ɵngcc0","hasV8BreakIterator","Intl","v8BreakIterator","Platform","constructor","_platformId","isBrowser","document","EDGE","test","navigator","userAgent","TRIDENT","BLINK","window","chrome","CSS","WEBKIT","IOS","FIREFOX","ANDROID","SAFARI","ɵfac","Platform_Factory","t","ɵɵinject","ɵprov","ɵɵdefineInjectable","token","factory","providedIn","ctorParameters","type","Object","decorators","args","ngInjectableDef","ngDevMode","ɵsetClassMetadata","PlatformModule","PlatformModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","supportedInputTypes","candidateInputTypes","getSupportedInputTypes","Set","featureTestInput","createElement","filter","value","setAttribute","supportsPassiveEvents","supportsPassiveEventListeners","addEventListener","defineProperty","get","RtlScrollAxisType","NORMAL","NEGATED","INVERTED","rtlScrollAxisType","supportsScrollBehavior","documentElement","style","getRtlScrollAxisType","scrollContainer","containerStyle","dir","height","width","overflow","visibility","pointerEvents","position","content","contentStyle","appendChild","body","scrollLeft","parentNode","removeChild"],"sources":["C:/duel-zone/Web/ClientApp/node_modules/@angular/cdk/__ivy_ngcc__/esm2015/platform.js"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Inject, Injectable, Optional, PLATFORM_ID, NgModule, defineInjectable, inject } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nimport * as ɵngcc0 from '@angular/core';\nconst hasV8BreakIterator = (typeof Intl !== 'undefined' && (/** @type {?} */ (Intl)).v8BreakIterator);\n/**\n * Service to detect the current platform by comparing the userAgent strings and\n * checking browser-specific global properties.\n */\nclass Platform {\n    /**\n     * \\@breaking-change 8.0.0 remove optional decorator\n     * @param {?=} _platformId\n     */\n    constructor(_platformId) {\n        this._platformId = _platformId;\n        /**\n         * Whether the Angular application is being rendered in the browser.\n         * We want to use the Angular platform check because if the Document is shimmed\n         * without the navigator, the following checks will fail. This is preferred because\n         * sometimes the Document may be shimmed without the user's knowledge or intention\n         */\n        this.isBrowser = this._platformId ?\n            isPlatformBrowser(this._platformId) : typeof document === 'object' && !!document;\n        /**\n         * Whether the current browser is Microsoft Edge.\n         */\n        this.EDGE = this.isBrowser && /(edge)/i.test(navigator.userAgent);\n        /**\n         * Whether the current rendering engine is Microsoft Trident.\n         */\n        this.TRIDENT = this.isBrowser && /(msie|trident)/i.test(navigator.userAgent);\n        /**\n         * Whether the current rendering engine is Blink.\n         */\n        this.BLINK = this.isBrowser && (!!((/** @type {?} */ (window)).chrome || hasV8BreakIterator) &&\n            typeof CSS !== 'undefined' && !this.EDGE && !this.TRIDENT);\n        /**\n         * Whether the current rendering engine is WebKit.\n         */\n        this.WEBKIT = this.isBrowser &&\n            /AppleWebKit/i.test(navigator.userAgent) && !this.BLINK && !this.EDGE && !this.TRIDENT;\n        /**\n         * Whether the current platform is Apple iOS.\n         */\n        this.IOS = this.isBrowser && /iPad|iPhone|iPod/.test(navigator.userAgent) &&\n            !('MSStream' in window);\n        /**\n         * Whether the current browser is Firefox.\n         */\n        this.FIREFOX = this.isBrowser && /(firefox|minefield)/i.test(navigator.userAgent);\n        /**\n         * Whether the current platform is Android.\n         */\n        this.ANDROID = this.isBrowser && /android/i.test(navigator.userAgent) && !this.TRIDENT;\n        /**\n         * Whether the current browser is Safari.\n         */\n        this.SAFARI = this.isBrowser && /safari/i.test(navigator.userAgent) && this.WEBKIT;\n    }\n}\nPlatform.ɵfac = function Platform_Factory(t) { return new (t || Platform)(ɵngcc0.ɵɵinject(PLATFORM_ID, 8)); };\nPlatform.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: Platform, factory: Platform.ɵfac, providedIn: 'root' });\n/** @nocollapse */\nPlatform.ctorParameters = () => [\n    { type: Object, decorators: [{ type: Optional }, { type: Inject, args: [PLATFORM_ID,] }] }\n];\n/** @nocollapse */ Platform.ngInjectableDef = defineInjectable({ factory: function Platform_Factory() { return new Platform(inject(PLATFORM_ID, 8)); }, token: Platform, providedIn: \"root\" });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Platform, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: Object, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [PLATFORM_ID]\n            }] }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nclass PlatformModule {\n}\nPlatformModule.ɵfac = function PlatformModule_Factory(t) { return new (t || PlatformModule)(); };\nPlatformModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: PlatformModule });\nPlatformModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({});\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PlatformModule, [{\n        type: NgModule\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/** *\n * Cached result Set of input types support by the current browser.\n  @type {?} */\nlet supportedInputTypes;\n/** *\n * Types of `<input>` that *might* be supported.\n  @type {?} */\nconst candidateInputTypes = [\n    'color',\n    'button',\n    'checkbox',\n    'date',\n    'datetime-local',\n    'email',\n    'file',\n    'hidden',\n    'image',\n    'month',\n    'number',\n    'password',\n    'radio',\n    'range',\n    'reset',\n    'search',\n    'submit',\n    'tel',\n    'text',\n    'time',\n    'url',\n    'week',\n];\n/**\n * @return {?} The input types supported by this browser.\n */\nfunction getSupportedInputTypes() {\n    // Result is cached.\n    if (supportedInputTypes) {\n        return supportedInputTypes;\n    }\n    // We can't check if an input type is not supported until we're on the browser, so say that\n    // everything is supported when not on the browser. We don't use `Platform` here since it's\n    // just a helper function and can't inject it.\n    if (typeof document !== 'object' || !document) {\n        supportedInputTypes = new Set(candidateInputTypes);\n        return supportedInputTypes;\n    }\n    /** @type {?} */\n    let featureTestInput = document.createElement('input');\n    supportedInputTypes = new Set(candidateInputTypes.filter(value => {\n        featureTestInput.setAttribute('type', value);\n        return featureTestInput.type === value;\n    }));\n    return supportedInputTypes;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/** *\n * Cached result of whether the user's browser supports passive event listeners.\n  @type {?} */\nlet supportsPassiveEvents;\n/**\n * Checks whether the user's browser supports passive event listeners.\n * See: https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\n * @return {?}\n */\nfunction supportsPassiveEventListeners() {\n    if (supportsPassiveEvents == null && typeof window !== 'undefined') {\n        try {\n            window.addEventListener('test', /** @type {?} */ ((null)), Object.defineProperty({}, 'passive', {\n                get: () => supportsPassiveEvents = true\n            }));\n        }\n        finally {\n            supportsPassiveEvents = supportsPassiveEvents || false;\n        }\n    }\n    return supportsPassiveEvents;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/** @enum {number} */\nvar RtlScrollAxisType = {\n    /**\n       * scrollLeft is 0 when scrolled all the way left and (scrollWidth - clientWidth) when scrolled\n       * all the way right.\n       */\n    NORMAL: 0,\n    /**\n       * scrollLeft is -(scrollWidth - clientWidth) when scrolled all the way left and 0 when scrolled\n       * all the way right.\n       */\n    NEGATED: 1,\n    /**\n       * scrollLeft is (scrollWidth - clientWidth) when scrolled all the way left and 0 when scrolled\n       * all the way right.\n       */\n    INVERTED: 2,\n};\nRtlScrollAxisType[RtlScrollAxisType.NORMAL] = 'NORMAL';\nRtlScrollAxisType[RtlScrollAxisType.NEGATED] = 'NEGATED';\nRtlScrollAxisType[RtlScrollAxisType.INVERTED] = 'INVERTED';\n/** *\n * Cached result of the way the browser handles the horizontal scroll axis in RTL mode.\n  @type {?} */\nlet rtlScrollAxisType;\n/**\n * Check whether the browser supports scroll behaviors.\n * @return {?}\n */\nfunction supportsScrollBehavior() {\n    return !!(typeof document == 'object' && 'scrollBehavior' in /** @type {?} */ ((document.documentElement)).style);\n}\n/**\n * Checks the type of RTL scroll axis used by this browser. As of time of writing, Chrome is NORMAL,\n * Firefox & Safari are NEGATED, and IE & Edge are INVERTED.\n * @return {?}\n */\nfunction getRtlScrollAxisType() {\n    // We can't check unless we're on the browser. Just assume 'normal' if we're not.\n    if (typeof document !== 'object' || !document) {\n        return RtlScrollAxisType.NORMAL;\n    }\n    if (!rtlScrollAxisType) {\n        /** @type {?} */\n        const scrollContainer = document.createElement('div');\n        /** @type {?} */\n        const containerStyle = scrollContainer.style;\n        scrollContainer.dir = 'rtl';\n        containerStyle.height = '1px';\n        containerStyle.width = '1px';\n        containerStyle.overflow = 'auto';\n        containerStyle.visibility = 'hidden';\n        containerStyle.pointerEvents = 'none';\n        containerStyle.position = 'absolute';\n        /** @type {?} */\n        const content = document.createElement('div');\n        /** @type {?} */\n        const contentStyle = content.style;\n        contentStyle.width = '2px';\n        contentStyle.height = '1px';\n        scrollContainer.appendChild(content);\n        document.body.appendChild(scrollContainer);\n        rtlScrollAxisType = RtlScrollAxisType.NORMAL;\n        // The viewport starts scrolled all the way to the right in RTL mode. If we are in a NORMAL\n        // browser this would mean that the scrollLeft should be 1. If it's zero instead we know we're\n        // dealing with one of the other two types of browsers.\n        if (scrollContainer.scrollLeft === 0) {\n            // In a NEGATED browser the scrollLeft is always somewhere in [-maxScrollAmount, 0]. For an\n            // INVERTED browser it is always somewhere in [0, maxScrollAmount]. We can determine which by\n            // setting to the scrollLeft to 1. This is past the max for a NEGATED browser, so it will\n            // return 0 when we read it again.\n            scrollContainer.scrollLeft = 1;\n            rtlScrollAxisType =\n                scrollContainer.scrollLeft === 0 ? RtlScrollAxisType.NEGATED : RtlScrollAxisType.INVERTED;\n        } /** @type {?} */\n        ((scrollContainer.parentNode)).removeChild(scrollContainer);\n    }\n    return rtlScrollAxisType;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\nexport { Platform, PlatformModule, getSupportedInputTypes, supportsPassiveEventListeners, supportsScrollBehavior, getRtlScrollAxisType, RtlScrollAxisType };\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}