{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\n\nfunction DeckComponent_p_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\")(1, \"em\");\n    i0.ɵɵtext(2, \"Loading...\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction DeckComponent_table_3_tr_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\")(6, \"button\", 4);\n    i0.ɵɵtext(7, \"Remove\");\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const card_r3 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(card_r3.quantity);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(card_r3.name);\n  }\n}\n\nfunction DeckComponent_table_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"table\", 2)(1, \"thead\")(2, \"tr\")(3, \"th\");\n    i0.ɵɵtext(4, \"Quantity\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"th\");\n    i0.ɵɵtext(6, \"Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(7, \"th\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"tbody\");\n    i0.ɵɵtemplate(9, DeckComponent_table_3_tr_9_Template, 8, 2, \"tr\", 3);\n    i0.ɵɵpipe(10, \"async\");\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(9);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(10, 1, ctx_r1.deckCards));\n  }\n} //import { HttpClient } from '@angular/common/http';\n\n\nexport class DeckComponent {\n  constructor() {\n    this.id = 0;\n    this.deckCards = [{\n      id: this.id++,\n      quantity: 1,\n      name: \"Example\"\n    }];\n  }\n\n  onAdded(cardName) {\n    //let foo = this.cards;\n    //foo.push({ quantity: 1, name: cardName });\n    //this.deckCards = foo\n    this.deckCards.push({\n      id: this.id++,\n      quantity: 1,\n      name: cardName\n    });\n  }\n\n}\n\nDeckComponent.ɵfac = function DeckComponent_Factory(t) {\n  return new (t || DeckComponent)();\n};\n\nDeckComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DeckComponent,\n  selectors: [[\"app-deck\"]],\n  decls: 4,\n  vars: 2,\n  consts: [[4, \"ngIf\"], [\"class\", \"table table-striped\", \"aria-labelledby\", \"tableLabel\", 4, \"ngIf\"], [\"aria-labelledby\", \"tableLabel\", 1, \"table\", \"table-striped\"], [4, \"ngFor\", \"ngForOf\"], [1, \"btn\", \"btn-primary\"]],\n  template: function DeckComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h2\");\n      i0.ɵɵtext(1, \"Deck\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(2, DeckComponent_p_2_Template, 3, 0, \"p\", 0);\n      i0.ɵɵtemplate(3, DeckComponent_table_3_Template, 11, 3, \"table\", 1);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", !ctx.deckCards);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.deckCards);\n    }\n  },\n  dependencies: [i1.NgForOf, i1.NgIf, i1.AsyncPipe],\n  encapsulation: 2\n});\nDeckComponent.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: DeckComponent,\n  factory: DeckComponent.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;;;;IACAA,0BAAsB,CAAtB,EAAsB,IAAtB;IAA0BA;IAAUA;;;;;;IAUhCA,2BAA2C,CAA3C,EAA2C,IAA3C;IACMA;IAAmBA;IACvBA;IAAIA;IAAeA;IACnBA,2BAAI,CAAJ,EAAI,QAAJ,EAAI,CAAJ;IAAoCA;IAAMA;;;;;IAFtCA;IAAAA;IACAA;IAAAA;;;;;;IAXVA,iCAAkF,CAAlF,EAAkF,OAAlF,EAAkF,CAAlF,EAAkF,IAAlF,EAAkF,CAAlF,EAAkF,IAAlF;IAGUA;IAAQA;IACZA;IAAIA;IAAIA;IACRA;IACFA;IAEFA;IACEA;;IAKFA;;;;;IALuBA;IAAAA;;ECVzB;;;AAQA,OAAM,MAAOC,aAAP,CAAoB;EAN1BC;IAOE,UAAa,CAAb;IACO,iBAAwB,CAAC;MAAEC,EAAE,EAAE,KAAKA,EAAL,EAAN;MAAiBC,QAAQ,EAAE,CAA3B;MAA8BC,IAAI,EAAE;IAApC,CAAD,CAAxB;EAQR;;EANQC,OAAO,CAACC,QAAD,EAAiB;IAC7B;IACA;IACA;IACA,KAAKC,SAAL,CAAeC,IAAf,CAAoB;MAAEN,EAAE,EAAE,KAAKA,EAAL,EAAN;MAAiBC,QAAQ,EAAE,CAA3B;MAA8BC,IAAI,EAAEE;IAApC,CAApB;EACD;;AATuB;;;mBAAbN;AAAa;;;QAAbA;EAAaS;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDT1Bd;MAAIA;MAAIA;MACRA;MACAA;;;;MADIA;MAAAA;MAC6DA;MAAAA;;;;;;;SCOpDC;EAAac,SAAbd,aAAa;EAAAe,YADA","names":["i0","DeckComponent","constructor","id","quantity","name","onAdded","cardName","deckCards","push","selectors","decls","vars","consts","template","factory","providedIn"],"sourceRoot":"","sources":["C:\\duel-zone\\Web\\ClientApp\\src\\app\\deck\\deck.component.html","C:\\duel-zone\\Web\\ClientApp\\src\\app\\deck\\deck.component.ts"],"sourcesContent":["<h2>Deck</h2>\r\n<p *ngIf=\"!deckCards\"><em>Loading...</em></p>\r\n<table class='table table-striped' aria-labelledby=\"tableLabel\" *ngIf=\"deckCards\">\r\n  <thead>\r\n    <tr>\r\n      <th>Quantity</th>\r\n      <th>Name</th>\r\n      <th></th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr *ngFor=\"let card of deckCards | async\">\r\n      <td>{{ card.quantity }}</td>\r\n      <td>{{ card.name }}</td>\r\n      <td><button class=\"btn btn-primary\">Remove</button></td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n","import { Component, Injectable } from '@angular/core';\r\n//import { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-deck',\r\n  templateUrl: './deck.component.html'\r\n})\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class DeckComponent {\r\n  id: number = 0;\r\n  public deckCards: DeckCard[] = [{ id: this.id++, quantity: 1, name: \"Example\" }];\r\n\r\n  public onAdded(cardName: string) {\r\n    //let foo = this.cards;\r\n    //foo.push({ quantity: 1, name: cardName });\r\n    //this.deckCards = foo\r\n    this.deckCards.push({ id: this.id++, quantity: 1, name: cardName });\r\n  }\r\n}\r\n\r\ninterface DeckCard {\r\n  id: number;\r\n  quantity: number;\r\n  name: string;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}