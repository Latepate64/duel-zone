{"ast":null,"code":"/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { CDK_TABLE_TEMPLATE, CdkTable, CdkCell, CdkCellDef, CdkColumnDef, CdkFooterCell, CdkFooterCellDef, CdkHeaderCell, CdkHeaderCellDef, CDK_ROW_TEMPLATE, CdkFooterRow, CdkFooterRowDef, CdkHeaderRow, CdkHeaderRowDef, CdkRow, CdkRowDef, CdkTableModule, DataSource } from '@angular/cdk/table';\nimport { ChangeDetectionStrategy, Component, ViewEncapsulation, Directive, ElementRef, Input, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatCommonModule } from '@angular/material/core';\nimport { _isNumberValue } from '@angular/cdk/coercion';\nimport { BehaviorSubject, combineLatest, merge, of, Subscription } from 'rxjs';\nimport { map } from 'rxjs/operators';\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/table';\nconst _CdkTable = CdkTable;\n/**\n * Wrapper for the CdkTable with Material design styles.\n * @template T\n */\n\nclass MatTable extends _CdkTable {\n  constructor() {\n    super(...arguments);\n    /**\n     * Overrides the sticky CSS class set by the `CdkTable`.\n     */\n\n    this.stickyCssClass = 'mat-table-sticky';\n  }\n\n}\n\nMatTable.ɵfac = /*@__PURE__*/function () {\n  let ɵMatTable_BaseFactory;\n  return function MatTable_Factory(t) {\n    return (ɵMatTable_BaseFactory || (ɵMatTable_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatTable)))(t || MatTable);\n  };\n}();\n\nMatTable.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: MatTable,\n  selectors: [[\"mat-table\"], [\"table\", \"mat-table\", \"\"]],\n  hostAttrs: [1, \"mat-table\"],\n  exportAs: [\"matTable\"],\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 3,\n  vars: 0,\n  consts: [[\"headerRowOutlet\", \"\"], [\"rowOutlet\", \"\"], [\"footerRowOutlet\", \"\"]],\n  template: function MatTable_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementContainer(0, 0)(1, 1)(2, 2);\n    }\n  },\n  dependencies: [ɵngcc1.DataRowOutlet, ɵngcc1.HeaderRowOutlet, ɵngcc1.FooterRowOutlet],\n  styles: [\"mat-table{display:block}mat-header-row{min-height:56px}mat-footer-row,mat-row{min-height:48px}mat-footer-row,mat-header-row,mat-row{display:flex;border-width:0;border-bottom-width:1px;border-style:solid;align-items:center;box-sizing:border-box}mat-footer-row::after,mat-header-row::after,mat-row::after{display:inline-block;min-height:inherit;content:''}mat-cell:first-of-type,mat-footer-cell:first-of-type,mat-header-cell:first-of-type{padding-left:24px}[dir=rtl] mat-cell:first-of-type,[dir=rtl] mat-footer-cell:first-of-type,[dir=rtl] mat-header-cell:first-of-type{padding-left:0;padding-right:24px}mat-cell:last-of-type,mat-footer-cell:last-of-type,mat-header-cell:last-of-type{padding-right:24px}[dir=rtl] mat-cell:last-of-type,[dir=rtl] mat-footer-cell:last-of-type,[dir=rtl] mat-header-cell:last-of-type{padding-right:0;padding-left:24px}mat-cell,mat-footer-cell,mat-header-cell{flex:1;display:flex;align-items:center;overflow:hidden;word-wrap:break-word;min-height:inherit}table.mat-table{border-spacing:0}tr.mat-header-row{height:56px}tr.mat-footer-row,tr.mat-row{height:48px}th.mat-header-cell{text-align:left}[dir=rtl] th.mat-header-cell{text-align:right}td.mat-cell,td.mat-footer-cell,th.mat-header-cell{padding:0;border-bottom-width:1px;border-bottom-style:solid}td.mat-cell:first-of-type,td.mat-footer-cell:first-of-type,th.mat-header-cell:first-of-type{padding-left:24px}[dir=rtl] td.mat-cell:first-of-type,[dir=rtl] td.mat-footer-cell:first-of-type,[dir=rtl] th.mat-header-cell:first-of-type{padding-left:0;padding-right:24px}td.mat-cell:last-of-type,td.mat-footer-cell:last-of-type,th.mat-header-cell:last-of-type{padding-right:24px}[dir=rtl] td.mat-cell:last-of-type,[dir=rtl] td.mat-footer-cell:last-of-type,[dir=rtl] th.mat-header-cell:last-of-type{padding-right:0;padding-left:24px}\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTable, [{\n    type: Component,\n    args: [{\n      selector: 'mat-table, table[mat-table]',\n      exportAs: 'matTable',\n      template: CDK_TABLE_TEMPLATE,\n      host: {\n        'class': 'mat-table'\n      },\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\"mat-table{display:block}mat-header-row{min-height:56px}mat-footer-row,mat-row{min-height:48px}mat-footer-row,mat-header-row,mat-row{display:flex;border-width:0;border-bottom-width:1px;border-style:solid;align-items:center;box-sizing:border-box}mat-footer-row::after,mat-header-row::after,mat-row::after{display:inline-block;min-height:inherit;content:''}mat-cell:first-of-type,mat-footer-cell:first-of-type,mat-header-cell:first-of-type{padding-left:24px}[dir=rtl] mat-cell:first-of-type,[dir=rtl] mat-footer-cell:first-of-type,[dir=rtl] mat-header-cell:first-of-type{padding-left:0;padding-right:24px}mat-cell:last-of-type,mat-footer-cell:last-of-type,mat-header-cell:last-of-type{padding-right:24px}[dir=rtl] mat-cell:last-of-type,[dir=rtl] mat-footer-cell:last-of-type,[dir=rtl] mat-header-cell:last-of-type{padding-right:0;padding-left:24px}mat-cell,mat-footer-cell,mat-header-cell{flex:1;display:flex;align-items:center;overflow:hidden;word-wrap:break-word;min-height:inherit}table.mat-table{border-spacing:0}tr.mat-header-row{height:56px}tr.mat-footer-row,tr.mat-row{height:48px}th.mat-header-cell{text-align:left}[dir=rtl] th.mat-header-cell{text-align:right}td.mat-cell,td.mat-footer-cell,th.mat-header-cell{padding:0;border-bottom-width:1px;border-bottom-style:solid}td.mat-cell:first-of-type,td.mat-footer-cell:first-of-type,th.mat-header-cell:first-of-type{padding-left:24px}[dir=rtl] td.mat-cell:first-of-type,[dir=rtl] td.mat-footer-cell:first-of-type,[dir=rtl] th.mat-header-cell:first-of-type{padding-left:0;padding-right:24px}td.mat-cell:last-of-type,td.mat-footer-cell:last-of-type,th.mat-header-cell:last-of-type{padding-right:24px}[dir=rtl] td.mat-cell:last-of-type,[dir=rtl] td.mat-footer-cell:last-of-type,[dir=rtl] th.mat-header-cell:last-of-type{padding-right:0;padding-left:24px}\"]\n    }]\n  }], null, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\n\nconst _CdkCellDef = CdkCellDef;\n/** @type {?} */\n\nconst _CdkHeaderCellDef = CdkHeaderCellDef;\n/** @type {?} */\n\nconst _CdkFooterCellDef = CdkFooterCellDef;\n/**\n * Cell definition for the mat-table.\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\n\nclass MatCellDef extends _CdkCellDef {}\n\nMatCellDef.ɵfac = /*@__PURE__*/function () {\n  let ɵMatCellDef_BaseFactory;\n  return function MatCellDef_Factory(t) {\n    return (ɵMatCellDef_BaseFactory || (ɵMatCellDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatCellDef)))(t || MatCellDef);\n  };\n}();\n\nMatCellDef.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: MatCellDef,\n  selectors: [[\"\", \"matCellDef\", \"\"]],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: CdkCellDef,\n    useExisting: MatCellDef\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCellDef, [{\n    type: Directive,\n    args: [{\n      selector: '[matCellDef]',\n      providers: [{\n        provide: CdkCellDef,\n        useExisting: MatCellDef\n      }]\n    }]\n  }], null, null);\n})();\n/**\n * Header cell definition for the mat-table.\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\n\n\nclass MatHeaderCellDef extends _CdkHeaderCellDef {}\n\nMatHeaderCellDef.ɵfac = /*@__PURE__*/function () {\n  let ɵMatHeaderCellDef_BaseFactory;\n  return function MatHeaderCellDef_Factory(t) {\n    return (ɵMatHeaderCellDef_BaseFactory || (ɵMatHeaderCellDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatHeaderCellDef)))(t || MatHeaderCellDef);\n  };\n}();\n\nMatHeaderCellDef.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: MatHeaderCellDef,\n  selectors: [[\"\", \"matHeaderCellDef\", \"\"]],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: CdkHeaderCellDef,\n    useExisting: MatHeaderCellDef\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatHeaderCellDef, [{\n    type: Directive,\n    args: [{\n      selector: '[matHeaderCellDef]',\n      providers: [{\n        provide: CdkHeaderCellDef,\n        useExisting: MatHeaderCellDef\n      }]\n    }]\n  }], null, null);\n})();\n/**\n * Footer cell definition for the mat-table.\n * Captures the template of a column's footer cell and as well as cell-specific properties.\n */\n\n\nclass MatFooterCellDef extends _CdkFooterCellDef {}\n\nMatFooterCellDef.ɵfac = /*@__PURE__*/function () {\n  let ɵMatFooterCellDef_BaseFactory;\n  return function MatFooterCellDef_Factory(t) {\n    return (ɵMatFooterCellDef_BaseFactory || (ɵMatFooterCellDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatFooterCellDef)))(t || MatFooterCellDef);\n  };\n}();\n\nMatFooterCellDef.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: MatFooterCellDef,\n  selectors: [[\"\", \"matFooterCellDef\", \"\"]],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: CdkFooterCellDef,\n    useExisting: MatFooterCellDef\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatFooterCellDef, [{\n    type: Directive,\n    args: [{\n      selector: '[matFooterCellDef]',\n      providers: [{\n        provide: CdkFooterCellDef,\n        useExisting: MatFooterCellDef\n      }]\n    }]\n  }], null, null);\n})();\n/**\n * Column definition for the mat-table.\n * Defines a set of cells available for a table column.\n */\n\n\nclass MatColumnDef extends CdkColumnDef {}\n\nMatColumnDef.ɵfac = /*@__PURE__*/function () {\n  let ɵMatColumnDef_BaseFactory;\n  return function MatColumnDef_Factory(t) {\n    return (ɵMatColumnDef_BaseFactory || (ɵMatColumnDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatColumnDef)))(t || MatColumnDef);\n  };\n}();\n\nMatColumnDef.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: MatColumnDef,\n  selectors: [[\"\", \"matColumnDef\", \"\"]],\n  inputs: {\n    name: [\"matColumnDef\", \"name\"],\n    sticky: \"sticky\",\n    stickyEnd: \"stickyEnd\"\n  },\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: CdkColumnDef,\n    useExisting: MatColumnDef\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature]\n});\nMatColumnDef.propDecorators = {\n  name: [{\n    type: Input,\n    args: ['matColumnDef']\n  }],\n  sticky: [{\n    type: Input\n  }],\n  stickyEnd: [{\n    type: Input\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatColumnDef, [{\n    type: Directive,\n    args: [{\n      selector: '[matColumnDef]',\n      providers: [{\n        provide: CdkColumnDef,\n        useExisting: MatColumnDef\n      }]\n    }]\n  }], null, {\n    name: [{\n      type: Input,\n      args: ['matColumnDef']\n    }],\n    sticky: [{\n      type: Input\n    }],\n    stickyEnd: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Header cell template container that adds the right classes and role.\n */\n\n\nclass MatHeaderCell extends CdkHeaderCell {\n  /**\n   * @param {?} columnDef\n   * @param {?} elementRef\n   */\n  constructor(columnDef, elementRef) {\n    super(columnDef, elementRef);\n    elementRef.nativeElement.classList.add(`mat-column-${columnDef.cssClassFriendlyName}`);\n  }\n\n}\n\nMatHeaderCell.ɵfac = function MatHeaderCell_Factory(t) {\n  return new (t || MatHeaderCell)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n};\n\nMatHeaderCell.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: MatHeaderCell,\n  selectors: [[\"mat-header-cell\"], [\"th\", \"mat-header-cell\", \"\"]],\n  hostAttrs: [\"role\", \"columnheader\", 1, \"mat-header-cell\"],\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n});\n/** @nocollapse */\n\nMatHeaderCell.ctorParameters = () => [{\n  type: CdkColumnDef\n}, {\n  type: ElementRef\n}];\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatHeaderCell, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-header-cell, th[mat-header-cell]',\n      host: {\n        'class': 'mat-header-cell',\n        'role': 'columnheader'\n      }\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc1.CdkColumnDef\n    }, {\n      type: ɵngcc0.ElementRef\n    }];\n  }, null);\n})();\n/**\n * Footer cell template container that adds the right classes and role.\n */\n\n\nclass MatFooterCell extends CdkFooterCell {\n  /**\n   * @param {?} columnDef\n   * @param {?} elementRef\n   */\n  constructor(columnDef, elementRef) {\n    super(columnDef, elementRef);\n    elementRef.nativeElement.classList.add(`mat-column-${columnDef.cssClassFriendlyName}`);\n  }\n\n}\n\nMatFooterCell.ɵfac = function MatFooterCell_Factory(t) {\n  return new (t || MatFooterCell)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n};\n\nMatFooterCell.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: MatFooterCell,\n  selectors: [[\"mat-footer-cell\"], [\"td\", \"mat-footer-cell\", \"\"]],\n  hostAttrs: [\"role\", \"gridcell\", 1, \"mat-footer-cell\"],\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n});\n/** @nocollapse */\n\nMatFooterCell.ctorParameters = () => [{\n  type: CdkColumnDef\n}, {\n  type: ElementRef\n}];\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatFooterCell, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-footer-cell, td[mat-footer-cell]',\n      host: {\n        'class': 'mat-footer-cell',\n        'role': 'gridcell'\n      }\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc1.CdkColumnDef\n    }, {\n      type: ɵngcc0.ElementRef\n    }];\n  }, null);\n})();\n/**\n * Cell template container that adds the right classes and role.\n */\n\n\nclass MatCell extends CdkCell {\n  /**\n   * @param {?} columnDef\n   * @param {?} elementRef\n   */\n  constructor(columnDef, elementRef) {\n    super(columnDef, elementRef);\n    elementRef.nativeElement.classList.add(`mat-column-${columnDef.cssClassFriendlyName}`);\n  }\n\n}\n\nMatCell.ɵfac = function MatCell_Factory(t) {\n  return new (t || MatCell)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n};\n\nMatCell.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: MatCell,\n  selectors: [[\"mat-cell\"], [\"td\", \"mat-cell\", \"\"]],\n  hostAttrs: [\"role\", \"gridcell\", 1, \"mat-cell\"],\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n});\n/** @nocollapse */\n\nMatCell.ctorParameters = () => [{\n  type: CdkColumnDef\n}, {\n  type: ElementRef\n}];\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCell, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-cell, td[mat-cell]',\n      host: {\n        'class': 'mat-cell',\n        'role': 'gridcell'\n      }\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc1.CdkColumnDef\n    }, {\n      type: ɵngcc0.ElementRef\n    }];\n  }, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\n\nconst _CdkHeaderRowDef = CdkHeaderRowDef;\n/** @type {?} */\n\nconst _CdkFooterRowDef = CdkFooterRowDef;\n/** @type {?} */\n\nconst _CdkRowDef = CdkRowDef;\n/**\n * Header row definition for the mat-table.\n * Captures the header row's template and other header properties such as the columns to display.\n */\n\nclass MatHeaderRowDef extends _CdkHeaderRowDef {}\n\nMatHeaderRowDef.ɵfac = /*@__PURE__*/function () {\n  let ɵMatHeaderRowDef_BaseFactory;\n  return function MatHeaderRowDef_Factory(t) {\n    return (ɵMatHeaderRowDef_BaseFactory || (ɵMatHeaderRowDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatHeaderRowDef)))(t || MatHeaderRowDef);\n  };\n}();\n\nMatHeaderRowDef.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: MatHeaderRowDef,\n  selectors: [[\"\", \"matHeaderRowDef\", \"\"]],\n  inputs: {\n    columns: [\"matHeaderRowDef\", \"columns\"],\n    sticky: [\"matHeaderRowDefSticky\", \"sticky\"]\n  },\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: CdkHeaderRowDef,\n    useExisting: MatHeaderRowDef\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatHeaderRowDef, [{\n    type: Directive,\n    args: [{\n      selector: '[matHeaderRowDef]',\n      providers: [{\n        provide: CdkHeaderRowDef,\n        useExisting: MatHeaderRowDef\n      }],\n      inputs: ['columns: matHeaderRowDef', 'sticky: matHeaderRowDefSticky']\n    }]\n  }], null, null);\n})();\n/**\n * Footer row definition for the mat-table.\n * Captures the footer row's template and other footer properties such as the columns to display.\n */\n\n\nclass MatFooterRowDef extends _CdkFooterRowDef {}\n\nMatFooterRowDef.ɵfac = /*@__PURE__*/function () {\n  let ɵMatFooterRowDef_BaseFactory;\n  return function MatFooterRowDef_Factory(t) {\n    return (ɵMatFooterRowDef_BaseFactory || (ɵMatFooterRowDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatFooterRowDef)))(t || MatFooterRowDef);\n  };\n}();\n\nMatFooterRowDef.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: MatFooterRowDef,\n  selectors: [[\"\", \"matFooterRowDef\", \"\"]],\n  inputs: {\n    columns: [\"matFooterRowDef\", \"columns\"],\n    sticky: [\"matFooterRowDefSticky\", \"sticky\"]\n  },\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: CdkFooterRowDef,\n    useExisting: MatFooterRowDef\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatFooterRowDef, [{\n    type: Directive,\n    args: [{\n      selector: '[matFooterRowDef]',\n      providers: [{\n        provide: CdkFooterRowDef,\n        useExisting: MatFooterRowDef\n      }],\n      inputs: ['columns: matFooterRowDef', 'sticky: matFooterRowDefSticky']\n    }]\n  }], null, null);\n})();\n/**\n * Data row definition for the mat-table.\n * Captures the data row's template and other properties such as the columns to display and\n * a when predicate that describes when this row should be used.\n * @template T\n */\n\n\nclass MatRowDef extends _CdkRowDef {}\n\nMatRowDef.ɵfac = /*@__PURE__*/function () {\n  let ɵMatRowDef_BaseFactory;\n  return function MatRowDef_Factory(t) {\n    return (ɵMatRowDef_BaseFactory || (ɵMatRowDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatRowDef)))(t || MatRowDef);\n  };\n}();\n\nMatRowDef.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: MatRowDef,\n  selectors: [[\"\", \"matRowDef\", \"\"]],\n  inputs: {\n    columns: [\"matRowDefColumns\", \"columns\"],\n    when: [\"matRowDefWhen\", \"when\"]\n  },\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: CdkRowDef,\n    useExisting: MatRowDef\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatRowDef, [{\n    type: Directive,\n    args: [{\n      selector: '[matRowDef]',\n      providers: [{\n        provide: CdkRowDef,\n        useExisting: MatRowDef\n      }],\n      inputs: ['columns: matRowDefColumns', 'when: matRowDefWhen']\n    }]\n  }], null, null);\n})();\n/**\n * Footer template container that contains the cell outlet. Adds the right class and role.\n */\n\n\nclass MatHeaderRow extends CdkHeaderRow {}\n\nMatHeaderRow.ɵfac = /*@__PURE__*/function () {\n  let ɵMatHeaderRow_BaseFactory;\n  return function MatHeaderRow_Factory(t) {\n    return (ɵMatHeaderRow_BaseFactory || (ɵMatHeaderRow_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatHeaderRow)))(t || MatHeaderRow);\n  };\n}();\n\nMatHeaderRow.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: MatHeaderRow,\n  selectors: [[\"mat-header-row\"], [\"tr\", \"mat-header-row\", \"\"]],\n  hostAttrs: [\"role\", \"row\", 1, \"mat-header-row\"],\n  exportAs: [\"matHeaderRow\"],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: CdkHeaderRow,\n    useExisting: MatHeaderRow\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 1,\n  vars: 0,\n  consts: [[\"cdkCellOutlet\", \"\"]],\n  template: function MatHeaderRow_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementContainer(0, 0);\n    }\n  },\n  dependencies: [ɵngcc1.CdkCellOutlet],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatHeaderRow, [{\n    type: Component,\n    args: [{\n      selector: 'mat-header-row, tr[mat-header-row]',\n      template: CDK_ROW_TEMPLATE,\n      host: {\n        'class': 'mat-header-row',\n        'role': 'row'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      exportAs: 'matHeaderRow',\n      providers: [{\n        provide: CdkHeaderRow,\n        useExisting: MatHeaderRow\n      }]\n    }]\n  }], null, null);\n})();\n/**\n * Footer template container that contains the cell outlet. Adds the right class and role.\n */\n\n\nclass MatFooterRow extends CdkFooterRow {}\n\nMatFooterRow.ɵfac = /*@__PURE__*/function () {\n  let ɵMatFooterRow_BaseFactory;\n  return function MatFooterRow_Factory(t) {\n    return (ɵMatFooterRow_BaseFactory || (ɵMatFooterRow_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatFooterRow)))(t || MatFooterRow);\n  };\n}();\n\nMatFooterRow.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: MatFooterRow,\n  selectors: [[\"mat-footer-row\"], [\"tr\", \"mat-footer-row\", \"\"]],\n  hostAttrs: [\"role\", \"row\", 1, \"mat-footer-row\"],\n  exportAs: [\"matFooterRow\"],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: CdkFooterRow,\n    useExisting: MatFooterRow\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 1,\n  vars: 0,\n  consts: [[\"cdkCellOutlet\", \"\"]],\n  template: function MatFooterRow_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementContainer(0, 0);\n    }\n  },\n  dependencies: [ɵngcc1.CdkCellOutlet],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatFooterRow, [{\n    type: Component,\n    args: [{\n      selector: 'mat-footer-row, tr[mat-footer-row]',\n      template: CDK_ROW_TEMPLATE,\n      host: {\n        'class': 'mat-footer-row',\n        'role': 'row'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      exportAs: 'matFooterRow',\n      providers: [{\n        provide: CdkFooterRow,\n        useExisting: MatFooterRow\n      }]\n    }]\n  }], null, null);\n})();\n/**\n * Data row template container that contains the cell outlet. Adds the right class and role.\n */\n\n\nclass MatRow extends CdkRow {}\n\nMatRow.ɵfac = /*@__PURE__*/function () {\n  let ɵMatRow_BaseFactory;\n  return function MatRow_Factory(t) {\n    return (ɵMatRow_BaseFactory || (ɵMatRow_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatRow)))(t || MatRow);\n  };\n}();\n\nMatRow.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: MatRow,\n  selectors: [[\"mat-row\"], [\"tr\", \"mat-row\", \"\"]],\n  hostAttrs: [\"role\", \"row\", 1, \"mat-row\"],\n  exportAs: [\"matRow\"],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: CdkRow,\n    useExisting: MatRow\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 1,\n  vars: 0,\n  consts: [[\"cdkCellOutlet\", \"\"]],\n  template: function MatRow_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementContainer(0, 0);\n    }\n  },\n  dependencies: [ɵngcc1.CdkCellOutlet],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatRow, [{\n    type: Component,\n    args: [{\n      selector: 'mat-row, tr[mat-row]',\n      template: CDK_ROW_TEMPLATE,\n      host: {\n        'class': 'mat-row',\n        'role': 'row'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      exportAs: 'matRow',\n      providers: [{\n        provide: CdkRow,\n        useExisting: MatRow\n      }]\n    }]\n  }], null, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\n\nconst EXPORTED_DECLARATIONS = [MatTable, MatHeaderCellDef, MatHeaderRowDef, MatColumnDef, MatCellDef, MatRowDef, MatFooterCellDef, MatFooterRowDef, MatHeaderCell, MatCell, MatFooterCell, MatHeaderRow, MatRow, MatFooterRow];\n\nclass MatTableModule {}\n\nMatTableModule.ɵfac = function MatTableModule_Factory(t) {\n  return new (t || MatTableModule)();\n};\n\nMatTableModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: MatTableModule\n});\nMatTableModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n  imports: [CdkTableModule, CommonModule, MatCommonModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTableModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CdkTableModule, CommonModule, MatCommonModule],\n      exports: EXPORTED_DECLARATIONS,\n      declarations: EXPORTED_DECLARATIONS\n    }]\n  }], null, null);\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatTableModule, {\n    declarations: function () {\n      return [MatTable, MatHeaderCellDef, MatHeaderRowDef, MatColumnDef, MatCellDef, MatRowDef, MatFooterCellDef, MatFooterRowDef, MatHeaderCell, MatCell, MatFooterCell, MatHeaderRow, MatRow, MatFooterRow];\n    },\n    imports: function () {\n      return [CdkTableModule, CommonModule, MatCommonModule];\n    },\n    exports: function () {\n      return [MatTable, MatHeaderCellDef, MatHeaderRowDef, MatColumnDef, MatCellDef, MatRowDef, MatFooterCellDef, MatFooterRowDef, MatHeaderCell, MatCell, MatFooterCell, MatHeaderRow, MatRow, MatFooterRow];\n    }\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/** *\n * Corresponds to `Number.MAX_SAFE_INTEGER`. Moved out into a variable here due to\n * flaky browser support and the value not being defined in Closure's typings.\n  @type {?} */\n\n\nconst MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * Data source that accepts a client-side data array and includes native support of filtering,\n * sorting (using MatSort), and pagination (using MatPaginator).\n *\n * Allows for sort customization by overriding sortingDataAccessor, which defines how data\n * properties are accessed. Also allows for filter customization by overriding filterTermAccessor,\n * which defines how row data is converted to a string for filter matching.\n * @template T\n */\n\nclass MatTableDataSource extends DataSource {\n  /**\n   * @param {?=} initialData\n   */\n  constructor(initialData = []) {\n    super();\n    /**\n     * Stream emitting render data to the table (depends on ordered data changes).\n     */\n\n    this._renderData = new BehaviorSubject([]);\n    /**\n     * Stream that emits when a new filter string is set on the data source.\n     */\n\n    this._filter = new BehaviorSubject('');\n    /**\n     * Subscription to the changes that should trigger an update to the table's rendered rows, such\n     * as filtering, sorting, pagination, or base data changes.\n     */\n\n    this._renderChangesSubscription = Subscription.EMPTY;\n    /**\n     * Data accessor function that is used for accessing data properties for sorting through\n     * the default sortData function.\n     * This default function assumes that the sort header IDs (which defaults to the column name)\n     * matches the data's properties (e.g. column Xyz represents data['Xyz']).\n     * May be set to a custom function for different behavior.\n     * @param data Data object that is being accessed.\n     * @param sortHeaderId The name of the column that represents the data.\n     */\n\n    this.sortingDataAccessor = (data, sortHeaderId) => {\n      /** @type {?} */\n      const value =\n      /** @type {?} */\n      data[sortHeaderId];\n\n      if (_isNumberValue(value)) {\n        /** @type {?} */\n        const numberValue = Number(value); // Numbers beyond `MAX_SAFE_INTEGER` can't be compared reliably so we\n        // leave them as strings. For more info: https://goo.gl/y5vbSg\n\n        return numberValue < MAX_SAFE_INTEGER ? numberValue : value;\n      }\n\n      return value;\n    };\n    /**\n     * Gets a sorted copy of the data array based on the state of the MatSort. Called\n     * after changes are made to the filtered data or when sort changes are emitted from MatSort.\n     * By default, the function retrieves the active sort and its direction and compares data\n     * by retrieving data using the sortingDataAccessor. May be overridden for a custom implementation\n     * of data ordering.\n     * @param data The array of data that should be sorted.\n     * @param sort The connected MatSort that holds the current sort state.\n     */\n\n\n    this.sortData = (data, sort) => {\n      /** @type {?} */\n      const active = sort.active;\n      /** @type {?} */\n\n      const direction = sort.direction;\n\n      if (!active || direction == '') {\n        return data;\n      }\n\n      return data.sort((a, b) => {\n        /** @type {?} */\n        let valueA = this.sortingDataAccessor(a, active);\n        /** @type {?} */\n\n        let valueB = this.sortingDataAccessor(b, active);\n        /** @type {?} */\n\n        let comparatorResult = 0;\n\n        if (valueA != null && valueB != null) {\n          // Check if one value is greater than the other; if equal, comparatorResult should remain 0.\n          if (valueA > valueB) {\n            comparatorResult = 1;\n          } else if (valueA < valueB) {\n            comparatorResult = -1;\n          }\n        } else if (valueA != null) {\n          comparatorResult = 1;\n        } else if (valueB != null) {\n          comparatorResult = -1;\n        }\n\n        return comparatorResult * (direction == 'asc' ? 1 : -1);\n      });\n    };\n    /**\n     * Checks if a data object matches the data source's filter string. By default, each data object\n     * is converted to a string of its properties and returns true if the filter has\n     * at least one occurrence in that string. By default, the filter string has its whitespace\n     * trimmed and the match is case-insensitive. May be overridden for a custom implementation of\n     * filter matching.\n     * @param data Data object used to check against the filter.\n     * @param filter Filter string that has been set on the data source.\n     * @return Whether the filter matches against the data\n     */\n\n\n    this.filterPredicate = (data, filter) => {\n      /** @type {?} */\n      const accumulator = (currentTerm, key) => currentTerm +\n      /** @type {?} */\n      data[key];\n      /** @type {?} */\n\n\n      const dataStr = Object.keys(data).reduce(accumulator, '').toLowerCase();\n      /** @type {?} */\n\n      const transformedFilter = filter.trim().toLowerCase();\n      return dataStr.indexOf(transformedFilter) != -1;\n    };\n\n    this._data = new BehaviorSubject(initialData);\n\n    this._updateChangeSubscription();\n  }\n  /**\n   * Array of data that should be rendered by the table, where each object represents one row.\n   * @return {?}\n   */\n\n\n  get data() {\n    return this._data.value;\n  }\n  /**\n   * @param {?} data\n   * @return {?}\n   */\n\n\n  set data(data) {\n    this._data.next(data);\n  }\n  /**\n   * Filter term that should be used to filter out objects from the data array. To override how\n   * data objects match to this filter string, provide a custom function for filterPredicate.\n   * @return {?}\n   */\n\n\n  get filter() {\n    return this._filter.value;\n  }\n  /**\n   * @param {?} filter\n   * @return {?}\n   */\n\n\n  set filter(filter) {\n    this._filter.next(filter);\n  }\n  /**\n   * Instance of the MatSort directive used by the table to control its sorting. Sort changes\n   * emitted by the MatSort will trigger an update to the table's rendered data.\n   * @return {?}\n   */\n\n\n  get sort() {\n    return this._sort;\n  }\n  /**\n   * @param {?} sort\n   * @return {?}\n   */\n\n\n  set sort(sort) {\n    this._sort = sort;\n\n    this._updateChangeSubscription();\n  }\n  /**\n   * Instance of the MatPaginator component used by the table to control what page of the data is\n   * displayed. Page changes emitted by the MatPaginator will trigger an update to the\n   * table's rendered data.\n   *\n   * Note that the data source uses the paginator's properties to calculate which page of data\n   * should be displayed. If the paginator receives its properties as template inputs,\n   * e.g. `[pageLength]=100` or `[pageIndex]=1`, then be sure that the paginator's view has been\n   * initialized before assigning it to this data source.\n   * @return {?}\n   */\n\n\n  get paginator() {\n    return this._paginator;\n  }\n  /**\n   * @param {?} paginator\n   * @return {?}\n   */\n\n\n  set paginator(paginator) {\n    this._paginator = paginator;\n\n    this._updateChangeSubscription();\n  }\n  /**\n   * Subscribe to changes that should trigger an update to the table's rendered rows. When the\n   * changes occur, process the current state of the filter, sort, and pagination along with\n   * the provided base data and send it to the table for rendering.\n   * @return {?}\n   */\n\n\n  _updateChangeSubscription() {\n    /** @type {?} */\n    const sortChange = this._sort ? merge(this._sort.sortChange, this._sort.initialized) : of(null);\n    /** @type {?} */\n\n    const pageChange = this._paginator ? merge(this._paginator.page, this._paginator.initialized) : of(null);\n    /** @type {?} */\n\n    const dataStream = this._data;\n    /** @type {?} */\n\n    const filteredData = combineLatest(dataStream, this._filter).pipe(map(([data]) => this._filterData(data)));\n    /** @type {?} */\n\n    const orderedData = combineLatest(filteredData, sortChange).pipe(map(([data]) => this._orderData(data)));\n    /** @type {?} */\n\n    const paginatedData = combineLatest(orderedData, pageChange).pipe(map(([data]) => this._pageData(data))); // Watched for paged data changes and send the result to the table to render.\n\n    this._renderChangesSubscription.unsubscribe();\n\n    this._renderChangesSubscription = paginatedData.subscribe(data => this._renderData.next(data));\n  }\n  /**\n   * Returns a filtered data array where each filter object contains the filter string within\n   * the result of the filterTermAccessor function. If no filter is set, returns the data array\n   * as provided.\n   * @param {?} data\n   * @return {?}\n   */\n\n\n  _filterData(data) {\n    // If there is a filter string, filter out data that does not contain it.\n    // Each data object is converted to a string using the function defined by filterTermAccessor.\n    // May be overridden for customization.\n    this.filteredData = !this.filter ? data : data.filter(obj => this.filterPredicate(obj, this.filter));\n\n    if (this.paginator) {\n      this._updatePaginator(this.filteredData.length);\n    }\n\n    return this.filteredData;\n  }\n  /**\n   * Returns a sorted copy of the data if MatSort has a sort applied, otherwise just returns the\n   * data array as provided. Uses the default data accessor for data lookup, unless a\n   * sortDataAccessor function is defined.\n   * @param {?} data\n   * @return {?}\n   */\n\n\n  _orderData(data) {\n    // If there is no active sort or direction, return the data without trying to sort.\n    if (!this.sort) {\n      return data;\n    }\n\n    return this.sortData(data.slice(), this.sort);\n  }\n  /**\n   * Returns a paged splice of the provided data array according to the provided MatPaginator's page\n   * index and length. If there is no paginator provided, returns the data array as provided.\n   * @param {?} data\n   * @return {?}\n   */\n\n\n  _pageData(data) {\n    if (!this.paginator) {\n      return data;\n    }\n    /** @type {?} */\n\n\n    const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n    return data.slice().splice(startIndex, this.paginator.pageSize);\n  }\n  /**\n   * Updates the paginator to reflect the length of the filtered data, and makes sure that the page\n   * index does not exceed the paginator's last page. Values are changed in a resolved promise to\n   * guard against making property changes within a round of change detection.\n   * @param {?} filteredDataLength\n   * @return {?}\n   */\n\n\n  _updatePaginator(filteredDataLength) {\n    Promise.resolve().then(() => {\n      if (!this.paginator) {\n        return;\n      }\n\n      this.paginator.length = filteredDataLength; // If the page index is set beyond the page, reduce it to the last page.\n\n      if (this.paginator.pageIndex > 0) {\n        /** @type {?} */\n        const lastPageIndex = Math.ceil(this.paginator.length / this.paginator.pageSize) - 1 || 0;\n        this.paginator.pageIndex = Math.min(this.paginator.pageIndex, lastPageIndex);\n      }\n    });\n  }\n  /**\n   * Used by the MatTable. Called when it connects to the data source.\n   * \\@docs-private\n   * @return {?}\n   */\n\n\n  connect() {\n    return this._renderData;\n  }\n  /**\n   * Used by the MatTable. Called when it is destroyed. No-op.\n   * \\@docs-private\n   * @return {?}\n   */\n\n\n  disconnect() {}\n\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n\nexport { MatTableModule, _CdkCellDef, _CdkHeaderCellDef, _CdkFooterCellDef, MatCellDef, MatHeaderCellDef, MatFooterCellDef, MatColumnDef, MatHeaderCell, MatFooterCell, MatCell, _CdkTable, MatTable, _CdkHeaderRowDef, _CdkFooterRowDef, _CdkRowDef, MatHeaderRowDef, MatFooterRowDef, MatRowDef, MatHeaderRow, MatFooterRow, MatRow, MatTableDataSource };","map":{"version":3,"names":["CDK_TABLE_TEMPLATE","CdkTable","CdkCell","CdkCellDef","CdkColumnDef","CdkFooterCell","CdkFooterCellDef","CdkHeaderCell","CdkHeaderCellDef","CDK_ROW_TEMPLATE","CdkFooterRow","CdkFooterRowDef","CdkHeaderRow","CdkHeaderRowDef","CdkRow","CdkRowDef","CdkTableModule","DataSource","ChangeDetectionStrategy","Component","ViewEncapsulation","Directive","ElementRef","Input","NgModule","CommonModule","MatCommonModule","_isNumberValue","BehaviorSubject","combineLatest","merge","of","Subscription","map","ɵngcc0","ɵngcc1","_CdkTable","MatTable","constructor","arguments","stickyCssClass","ɵfac","ɵMatTable_BaseFactory","MatTable_Factory","t","ɵɵgetInheritedFactory","ɵcmp","ɵɵdefineComponent","type","selectors","hostAttrs","exportAs","features","ɵɵInheritDefinitionFeature","decls","vars","consts","template","MatTable_Template","rf","ctx","ɵɵelementContainer","dependencies","DataRowOutlet","HeaderRowOutlet","FooterRowOutlet","styles","encapsulation","changeDetection","ngDevMode","ɵsetClassMetadata","args","selector","host","None","OnPush","_CdkCellDef","_CdkHeaderCellDef","_CdkFooterCellDef","MatCellDef","ɵMatCellDef_BaseFactory","MatCellDef_Factory","ɵdir","ɵɵdefineDirective","ɵɵProvidersFeature","provide","useExisting","providers","MatHeaderCellDef","ɵMatHeaderCellDef_BaseFactory","MatHeaderCellDef_Factory","MatFooterCellDef","ɵMatFooterCellDef_BaseFactory","MatFooterCellDef_Factory","MatColumnDef","ɵMatColumnDef_BaseFactory","MatColumnDef_Factory","inputs","name","sticky","stickyEnd","propDecorators","MatHeaderCell","columnDef","elementRef","nativeElement","classList","add","cssClassFriendlyName","MatHeaderCell_Factory","ɵɵdirectiveInject","ctorParameters","MatFooterCell","MatFooterCell_Factory","MatCell","MatCell_Factory","_CdkHeaderRowDef","_CdkFooterRowDef","_CdkRowDef","MatHeaderRowDef","ɵMatHeaderRowDef_BaseFactory","MatHeaderRowDef_Factory","columns","MatFooterRowDef","ɵMatFooterRowDef_BaseFactory","MatFooterRowDef_Factory","MatRowDef","ɵMatRowDef_BaseFactory","MatRowDef_Factory","when","MatHeaderRow","ɵMatHeaderRow_BaseFactory","MatHeaderRow_Factory","MatHeaderRow_Template","CdkCellOutlet","MatFooterRow","ɵMatFooterRow_BaseFactory","MatFooterRow_Factory","MatFooterRow_Template","MatRow","ɵMatRow_BaseFactory","MatRow_Factory","MatRow_Template","EXPORTED_DECLARATIONS","MatTableModule","MatTableModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","exports","declarations","ngJitMode","ɵɵsetNgModuleScope","MAX_SAFE_INTEGER","MatTableDataSource","initialData","_renderData","_filter","_renderChangesSubscription","EMPTY","sortingDataAccessor","data","sortHeaderId","value","numberValue","Number","sortData","sort","active","direction","a","b","valueA","valueB","comparatorResult","filterPredicate","filter","accumulator","currentTerm","key","dataStr","Object","keys","reduce","toLowerCase","transformedFilter","trim","indexOf","_data","_updateChangeSubscription","next","_sort","paginator","_paginator","sortChange","initialized","pageChange","page","dataStream","filteredData","pipe","_filterData","orderedData","_orderData","paginatedData","_pageData","unsubscribe","subscribe","obj","_updatePaginator","length","slice","startIndex","pageIndex","pageSize","splice","filteredDataLength","Promise","resolve","then","lastPageIndex","Math","ceil","min","connect","disconnect"],"sources":["C:/duel-zone/Web/ClientApp/node_modules/@angular/material/__ivy_ngcc__/esm2015/table.js"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { CDK_TABLE_TEMPLATE, CdkTable, CdkCell, CdkCellDef, CdkColumnDef, CdkFooterCell, CdkFooterCellDef, CdkHeaderCell, CdkHeaderCellDef, CDK_ROW_TEMPLATE, CdkFooterRow, CdkFooterRowDef, CdkHeaderRow, CdkHeaderRowDef, CdkRow, CdkRowDef, CdkTableModule, DataSource } from '@angular/cdk/table';\nimport { ChangeDetectionStrategy, Component, ViewEncapsulation, Directive, ElementRef, Input, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatCommonModule } from '@angular/material/core';\nimport { _isNumberValue } from '@angular/cdk/coercion';\nimport { BehaviorSubject, combineLatest, merge, of, Subscription } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/table';\nconst _CdkTable = CdkTable;\n/**\n * Wrapper for the CdkTable with Material design styles.\n * @template T\n */\nclass MatTable extends _CdkTable {\n    constructor() {\n        super(...arguments);\n        /**\n         * Overrides the sticky CSS class set by the `CdkTable`.\n         */\n        this.stickyCssClass = 'mat-table-sticky';\n    }\n}\nMatTable.ɵfac = /*@__PURE__*/ function () { let ɵMatTable_BaseFactory; return function MatTable_Factory(t) { return (ɵMatTable_BaseFactory || (ɵMatTable_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatTable)))(t || MatTable); }; }();\nMatTable.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatTable, selectors: [[\"mat-table\"], [\"table\", \"mat-table\", \"\"]], hostAttrs: [1, \"mat-table\"], exportAs: [\"matTable\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 3, vars: 0, consts: [[\"headerRowOutlet\", \"\"], [\"rowOutlet\", \"\"], [\"footerRowOutlet\", \"\"]], template: function MatTable_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0)(1, 1)(2, 2);\n    } }, dependencies: [ɵngcc1.DataRowOutlet, ɵngcc1.HeaderRowOutlet, ɵngcc1.FooterRowOutlet], styles: [\"mat-table{display:block}mat-header-row{min-height:56px}mat-footer-row,mat-row{min-height:48px}mat-footer-row,mat-header-row,mat-row{display:flex;border-width:0;border-bottom-width:1px;border-style:solid;align-items:center;box-sizing:border-box}mat-footer-row::after,mat-header-row::after,mat-row::after{display:inline-block;min-height:inherit;content:''}mat-cell:first-of-type,mat-footer-cell:first-of-type,mat-header-cell:first-of-type{padding-left:24px}[dir=rtl] mat-cell:first-of-type,[dir=rtl] mat-footer-cell:first-of-type,[dir=rtl] mat-header-cell:first-of-type{padding-left:0;padding-right:24px}mat-cell:last-of-type,mat-footer-cell:last-of-type,mat-header-cell:last-of-type{padding-right:24px}[dir=rtl] mat-cell:last-of-type,[dir=rtl] mat-footer-cell:last-of-type,[dir=rtl] mat-header-cell:last-of-type{padding-right:0;padding-left:24px}mat-cell,mat-footer-cell,mat-header-cell{flex:1;display:flex;align-items:center;overflow:hidden;word-wrap:break-word;min-height:inherit}table.mat-table{border-spacing:0}tr.mat-header-row{height:56px}tr.mat-footer-row,tr.mat-row{height:48px}th.mat-header-cell{text-align:left}[dir=rtl] th.mat-header-cell{text-align:right}td.mat-cell,td.mat-footer-cell,th.mat-header-cell{padding:0;border-bottom-width:1px;border-bottom-style:solid}td.mat-cell:first-of-type,td.mat-footer-cell:first-of-type,th.mat-header-cell:first-of-type{padding-left:24px}[dir=rtl] td.mat-cell:first-of-type,[dir=rtl] td.mat-footer-cell:first-of-type,[dir=rtl] th.mat-header-cell:first-of-type{padding-left:0;padding-right:24px}td.mat-cell:last-of-type,td.mat-footer-cell:last-of-type,th.mat-header-cell:last-of-type{padding-right:24px}[dir=rtl] td.mat-cell:last-of-type,[dir=rtl] td.mat-footer-cell:last-of-type,[dir=rtl] th.mat-header-cell:last-of-type{padding-right:0;padding-left:24px}\"], encapsulation: 2, changeDetection: 0 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTable, [{\n        type: Component,\n        args: [{ selector: 'mat-table, table[mat-table]', exportAs: 'matTable', template: CDK_TABLE_TEMPLATE, host: {\n                    'class': 'mat-table'\n                }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\"mat-table{display:block}mat-header-row{min-height:56px}mat-footer-row,mat-row{min-height:48px}mat-footer-row,mat-header-row,mat-row{display:flex;border-width:0;border-bottom-width:1px;border-style:solid;align-items:center;box-sizing:border-box}mat-footer-row::after,mat-header-row::after,mat-row::after{display:inline-block;min-height:inherit;content:''}mat-cell:first-of-type,mat-footer-cell:first-of-type,mat-header-cell:first-of-type{padding-left:24px}[dir=rtl] mat-cell:first-of-type,[dir=rtl] mat-footer-cell:first-of-type,[dir=rtl] mat-header-cell:first-of-type{padding-left:0;padding-right:24px}mat-cell:last-of-type,mat-footer-cell:last-of-type,mat-header-cell:last-of-type{padding-right:24px}[dir=rtl] mat-cell:last-of-type,[dir=rtl] mat-footer-cell:last-of-type,[dir=rtl] mat-header-cell:last-of-type{padding-right:0;padding-left:24px}mat-cell,mat-footer-cell,mat-header-cell{flex:1;display:flex;align-items:center;overflow:hidden;word-wrap:break-word;min-height:inherit}table.mat-table{border-spacing:0}tr.mat-header-row{height:56px}tr.mat-footer-row,tr.mat-row{height:48px}th.mat-header-cell{text-align:left}[dir=rtl] th.mat-header-cell{text-align:right}td.mat-cell,td.mat-footer-cell,th.mat-header-cell{padding:0;border-bottom-width:1px;border-bottom-style:solid}td.mat-cell:first-of-type,td.mat-footer-cell:first-of-type,th.mat-header-cell:first-of-type{padding-left:24px}[dir=rtl] td.mat-cell:first-of-type,[dir=rtl] td.mat-footer-cell:first-of-type,[dir=rtl] th.mat-header-cell:first-of-type{padding-left:0;padding-right:24px}td.mat-cell:last-of-type,td.mat-footer-cell:last-of-type,th.mat-header-cell:last-of-type{padding-right:24px}[dir=rtl] td.mat-cell:last-of-type,[dir=rtl] td.mat-footer-cell:last-of-type,[dir=rtl] th.mat-header-cell:last-of-type{padding-right:0;padding-left:24px}\"] }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst _CdkCellDef = CdkCellDef;\n/** @type {?} */\nconst _CdkHeaderCellDef = CdkHeaderCellDef;\n/** @type {?} */\nconst _CdkFooterCellDef = CdkFooterCellDef;\n/**\n * Cell definition for the mat-table.\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\nclass MatCellDef extends _CdkCellDef {\n}\nMatCellDef.ɵfac = /*@__PURE__*/ function () { let ɵMatCellDef_BaseFactory; return function MatCellDef_Factory(t) { return (ɵMatCellDef_BaseFactory || (ɵMatCellDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatCellDef)))(t || MatCellDef); }; }();\nMatCellDef.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatCellDef, selectors: [[\"\", \"matCellDef\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkCellDef, useExisting: MatCellDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCellDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matCellDef]',\n                providers: [{ provide: CdkCellDef, useExisting: MatCellDef }]\n            }]\n    }], null, null); })();\n/**\n * Header cell definition for the mat-table.\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\nclass MatHeaderCellDef extends _CdkHeaderCellDef {\n}\nMatHeaderCellDef.ɵfac = /*@__PURE__*/ function () { let ɵMatHeaderCellDef_BaseFactory; return function MatHeaderCellDef_Factory(t) { return (ɵMatHeaderCellDef_BaseFactory || (ɵMatHeaderCellDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatHeaderCellDef)))(t || MatHeaderCellDef); }; }();\nMatHeaderCellDef.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatHeaderCellDef, selectors: [[\"\", \"matHeaderCellDef\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkHeaderCellDef, useExisting: MatHeaderCellDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatHeaderCellDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matHeaderCellDef]',\n                providers: [{ provide: CdkHeaderCellDef, useExisting: MatHeaderCellDef }]\n            }]\n    }], null, null); })();\n/**\n * Footer cell definition for the mat-table.\n * Captures the template of a column's footer cell and as well as cell-specific properties.\n */\nclass MatFooterCellDef extends _CdkFooterCellDef {\n}\nMatFooterCellDef.ɵfac = /*@__PURE__*/ function () { let ɵMatFooterCellDef_BaseFactory; return function MatFooterCellDef_Factory(t) { return (ɵMatFooterCellDef_BaseFactory || (ɵMatFooterCellDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatFooterCellDef)))(t || MatFooterCellDef); }; }();\nMatFooterCellDef.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatFooterCellDef, selectors: [[\"\", \"matFooterCellDef\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkFooterCellDef, useExisting: MatFooterCellDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatFooterCellDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matFooterCellDef]',\n                providers: [{ provide: CdkFooterCellDef, useExisting: MatFooterCellDef }]\n            }]\n    }], null, null); })();\n/**\n * Column definition for the mat-table.\n * Defines a set of cells available for a table column.\n */\nclass MatColumnDef extends CdkColumnDef {\n}\nMatColumnDef.ɵfac = /*@__PURE__*/ function () { let ɵMatColumnDef_BaseFactory; return function MatColumnDef_Factory(t) { return (ɵMatColumnDef_BaseFactory || (ɵMatColumnDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatColumnDef)))(t || MatColumnDef); }; }();\nMatColumnDef.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatColumnDef, selectors: [[\"\", \"matColumnDef\", \"\"]], inputs: { name: [\"matColumnDef\", \"name\"], sticky: \"sticky\", stickyEnd: \"stickyEnd\" }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkColumnDef, useExisting: MatColumnDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatColumnDef.propDecorators = {\n    name: [{ type: Input, args: ['matColumnDef',] }],\n    sticky: [{ type: Input }],\n    stickyEnd: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatColumnDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matColumnDef]',\n                providers: [{ provide: CdkColumnDef, useExisting: MatColumnDef }]\n            }]\n    }], null, { name: [{\n            type: Input,\n            args: ['matColumnDef']\n        }], sticky: [{\n            type: Input\n        }], stickyEnd: [{\n            type: Input\n        }] }); })();\n/**\n * Header cell template container that adds the right classes and role.\n */\nclass MatHeaderCell extends CdkHeaderCell {\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     */\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n        elementRef.nativeElement.classList.add(`mat-column-${columnDef.cssClassFriendlyName}`);\n    }\n}\nMatHeaderCell.ɵfac = function MatHeaderCell_Factory(t) { return new (t || MatHeaderCell)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatHeaderCell.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatHeaderCell, selectors: [[\"mat-header-cell\"], [\"th\", \"mat-header-cell\", \"\"]], hostAttrs: [\"role\", \"columnheader\", 1, \"mat-header-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nMatHeaderCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatHeaderCell, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-header-cell, th[mat-header-cell]',\n                host: {\n                    'class': 'mat-header-cell',\n                    'role': 'columnheader'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc1.CdkColumnDef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n/**\n * Footer cell template container that adds the right classes and role.\n */\nclass MatFooterCell extends CdkFooterCell {\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     */\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n        elementRef.nativeElement.classList.add(`mat-column-${columnDef.cssClassFriendlyName}`);\n    }\n}\nMatFooterCell.ɵfac = function MatFooterCell_Factory(t) { return new (t || MatFooterCell)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatFooterCell.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatFooterCell, selectors: [[\"mat-footer-cell\"], [\"td\", \"mat-footer-cell\", \"\"]], hostAttrs: [\"role\", \"gridcell\", 1, \"mat-footer-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nMatFooterCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatFooterCell, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-footer-cell, td[mat-footer-cell]',\n                host: {\n                    'class': 'mat-footer-cell',\n                    'role': 'gridcell'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc1.CdkColumnDef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n/**\n * Cell template container that adds the right classes and role.\n */\nclass MatCell extends CdkCell {\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     */\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n        elementRef.nativeElement.classList.add(`mat-column-${columnDef.cssClassFriendlyName}`);\n    }\n}\nMatCell.ɵfac = function MatCell_Factory(t) { return new (t || MatCell)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatCell.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatCell, selectors: [[\"mat-cell\"], [\"td\", \"mat-cell\", \"\"]], hostAttrs: [\"role\", \"gridcell\", 1, \"mat-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nMatCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCell, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-cell, td[mat-cell]',\n                host: {\n                    'class': 'mat-cell',\n                    'role': 'gridcell'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc1.CdkColumnDef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst _CdkHeaderRowDef = CdkHeaderRowDef;\n/** @type {?} */\nconst _CdkFooterRowDef = CdkFooterRowDef;\n/** @type {?} */\nconst _CdkRowDef = CdkRowDef;\n/**\n * Header row definition for the mat-table.\n * Captures the header row's template and other header properties such as the columns to display.\n */\nclass MatHeaderRowDef extends _CdkHeaderRowDef {\n}\nMatHeaderRowDef.ɵfac = /*@__PURE__*/ function () { let ɵMatHeaderRowDef_BaseFactory; return function MatHeaderRowDef_Factory(t) { return (ɵMatHeaderRowDef_BaseFactory || (ɵMatHeaderRowDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatHeaderRowDef)))(t || MatHeaderRowDef); }; }();\nMatHeaderRowDef.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatHeaderRowDef, selectors: [[\"\", \"matHeaderRowDef\", \"\"]], inputs: { columns: [\"matHeaderRowDef\", \"columns\"], sticky: [\"matHeaderRowDefSticky\", \"sticky\"] }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkHeaderRowDef, useExisting: MatHeaderRowDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatHeaderRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matHeaderRowDef]',\n                providers: [{ provide: CdkHeaderRowDef, useExisting: MatHeaderRowDef }],\n                inputs: ['columns: matHeaderRowDef', 'sticky: matHeaderRowDefSticky']\n            }]\n    }], null, null); })();\n/**\n * Footer row definition for the mat-table.\n * Captures the footer row's template and other footer properties such as the columns to display.\n */\nclass MatFooterRowDef extends _CdkFooterRowDef {\n}\nMatFooterRowDef.ɵfac = /*@__PURE__*/ function () { let ɵMatFooterRowDef_BaseFactory; return function MatFooterRowDef_Factory(t) { return (ɵMatFooterRowDef_BaseFactory || (ɵMatFooterRowDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatFooterRowDef)))(t || MatFooterRowDef); }; }();\nMatFooterRowDef.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatFooterRowDef, selectors: [[\"\", \"matFooterRowDef\", \"\"]], inputs: { columns: [\"matFooterRowDef\", \"columns\"], sticky: [\"matFooterRowDefSticky\", \"sticky\"] }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkFooterRowDef, useExisting: MatFooterRowDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatFooterRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matFooterRowDef]',\n                providers: [{ provide: CdkFooterRowDef, useExisting: MatFooterRowDef }],\n                inputs: ['columns: matFooterRowDef', 'sticky: matFooterRowDefSticky']\n            }]\n    }], null, null); })();\n/**\n * Data row definition for the mat-table.\n * Captures the data row's template and other properties such as the columns to display and\n * a when predicate that describes when this row should be used.\n * @template T\n */\nclass MatRowDef extends _CdkRowDef {\n}\nMatRowDef.ɵfac = /*@__PURE__*/ function () { let ɵMatRowDef_BaseFactory; return function MatRowDef_Factory(t) { return (ɵMatRowDef_BaseFactory || (ɵMatRowDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatRowDef)))(t || MatRowDef); }; }();\nMatRowDef.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatRowDef, selectors: [[\"\", \"matRowDef\", \"\"]], inputs: { columns: [\"matRowDefColumns\", \"columns\"], when: [\"matRowDefWhen\", \"when\"] }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkRowDef, useExisting: MatRowDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matRowDef]',\n                providers: [{ provide: CdkRowDef, useExisting: MatRowDef }],\n                inputs: ['columns: matRowDefColumns', 'when: matRowDefWhen']\n            }]\n    }], null, null); })();\n/**\n * Footer template container that contains the cell outlet. Adds the right class and role.\n */\nclass MatHeaderRow extends CdkHeaderRow {\n}\nMatHeaderRow.ɵfac = /*@__PURE__*/ function () { let ɵMatHeaderRow_BaseFactory; return function MatHeaderRow_Factory(t) { return (ɵMatHeaderRow_BaseFactory || (ɵMatHeaderRow_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatHeaderRow)))(t || MatHeaderRow); }; }();\nMatHeaderRow.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatHeaderRow, selectors: [[\"mat-header-row\"], [\"tr\", \"mat-header-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"mat-header-row\"], exportAs: [\"matHeaderRow\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkHeaderRow, useExisting: MatHeaderRow }]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function MatHeaderRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, dependencies: [ɵngcc1.CdkCellOutlet], encapsulation: 2, changeDetection: 0 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatHeaderRow, [{\n        type: Component,\n        args: [{ selector: 'mat-header-row, tr[mat-header-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'mat-header-row',\n                    'role': 'row'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matHeaderRow',\n                providers: [{ provide: CdkHeaderRow, useExisting: MatHeaderRow }]\n            }]\n    }], null, null); })();\n/**\n * Footer template container that contains the cell outlet. Adds the right class and role.\n */\nclass MatFooterRow extends CdkFooterRow {\n}\nMatFooterRow.ɵfac = /*@__PURE__*/ function () { let ɵMatFooterRow_BaseFactory; return function MatFooterRow_Factory(t) { return (ɵMatFooterRow_BaseFactory || (ɵMatFooterRow_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatFooterRow)))(t || MatFooterRow); }; }();\nMatFooterRow.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatFooterRow, selectors: [[\"mat-footer-row\"], [\"tr\", \"mat-footer-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"mat-footer-row\"], exportAs: [\"matFooterRow\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkFooterRow, useExisting: MatFooterRow }]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function MatFooterRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, dependencies: [ɵngcc1.CdkCellOutlet], encapsulation: 2, changeDetection: 0 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatFooterRow, [{\n        type: Component,\n        args: [{ selector: 'mat-footer-row, tr[mat-footer-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'mat-footer-row',\n                    'role': 'row'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matFooterRow',\n                providers: [{ provide: CdkFooterRow, useExisting: MatFooterRow }]\n            }]\n    }], null, null); })();\n/**\n * Data row template container that contains the cell outlet. Adds the right class and role.\n */\nclass MatRow extends CdkRow {\n}\nMatRow.ɵfac = /*@__PURE__*/ function () { let ɵMatRow_BaseFactory; return function MatRow_Factory(t) { return (ɵMatRow_BaseFactory || (ɵMatRow_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatRow)))(t || MatRow); }; }();\nMatRow.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatRow, selectors: [[\"mat-row\"], [\"tr\", \"mat-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"mat-row\"], exportAs: [\"matRow\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkRow, useExisting: MatRow }]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function MatRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, dependencies: [ɵngcc1.CdkCellOutlet], encapsulation: 2, changeDetection: 0 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatRow, [{\n        type: Component,\n        args: [{ selector: 'mat-row, tr[mat-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'mat-row',\n                    'role': 'row'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matRow',\n                providers: [{ provide: CdkRow, useExisting: MatRow }]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst EXPORTED_DECLARATIONS = [\n    MatTable,\n    MatHeaderCellDef,\n    MatHeaderRowDef,\n    MatColumnDef,\n    MatCellDef,\n    MatRowDef,\n    MatFooterCellDef,\n    MatFooterRowDef,\n    MatHeaderCell,\n    MatCell,\n    MatFooterCell,\n    MatHeaderRow,\n    MatRow,\n    MatFooterRow,\n];\nclass MatTableModule {\n}\nMatTableModule.ɵfac = function MatTableModule_Factory(t) { return new (t || MatTableModule)(); };\nMatTableModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatTableModule });\nMatTableModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [CdkTableModule, CommonModule, MatCommonModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTableModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CdkTableModule, CommonModule, MatCommonModule],\n                exports: EXPORTED_DECLARATIONS,\n                declarations: EXPORTED_DECLARATIONS\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatTableModule, { declarations: function () { return [MatTable, MatHeaderCellDef, MatHeaderRowDef, MatColumnDef, MatCellDef, MatRowDef, MatFooterCellDef, MatFooterRowDef, MatHeaderCell, MatCell, MatFooterCell, MatHeaderRow, MatRow, MatFooterRow]; }, imports: function () { return [CdkTableModule, CommonModule, MatCommonModule]; }, exports: function () { return [MatTable, MatHeaderCellDef, MatHeaderRowDef, MatColumnDef, MatCellDef, MatRowDef, MatFooterCellDef, MatFooterRowDef, MatHeaderCell, MatCell, MatFooterCell, MatHeaderRow, MatRow, MatFooterRow]; } }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * Corresponds to `Number.MAX_SAFE_INTEGER`. Moved out into a variable here due to\n * flaky browser support and the value not being defined in Closure's typings.\n  @type {?} */\nconst MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * Data source that accepts a client-side data array and includes native support of filtering,\n * sorting (using MatSort), and pagination (using MatPaginator).\n *\n * Allows for sort customization by overriding sortingDataAccessor, which defines how data\n * properties are accessed. Also allows for filter customization by overriding filterTermAccessor,\n * which defines how row data is converted to a string for filter matching.\n * @template T\n */\nclass MatTableDataSource extends DataSource {\n    /**\n     * @param {?=} initialData\n     */\n    constructor(initialData = []) {\n        super();\n        /**\n         * Stream emitting render data to the table (depends on ordered data changes).\n         */\n        this._renderData = new BehaviorSubject([]);\n        /**\n         * Stream that emits when a new filter string is set on the data source.\n         */\n        this._filter = new BehaviorSubject('');\n        /**\n         * Subscription to the changes that should trigger an update to the table's rendered rows, such\n         * as filtering, sorting, pagination, or base data changes.\n         */\n        this._renderChangesSubscription = Subscription.EMPTY;\n        /**\n         * Data accessor function that is used for accessing data properties for sorting through\n         * the default sortData function.\n         * This default function assumes that the sort header IDs (which defaults to the column name)\n         * matches the data's properties (e.g. column Xyz represents data['Xyz']).\n         * May be set to a custom function for different behavior.\n         * @param data Data object that is being accessed.\n         * @param sortHeaderId The name of the column that represents the data.\n         */\n        this.sortingDataAccessor = (data, sortHeaderId) => {\n            /** @type {?} */\n            const value = (/** @type {?} */ (data))[sortHeaderId];\n            if (_isNumberValue(value)) {\n                /** @type {?} */\n                const numberValue = Number(value);\n                // Numbers beyond `MAX_SAFE_INTEGER` can't be compared reliably so we\n                // leave them as strings. For more info: https://goo.gl/y5vbSg\n                return numberValue < MAX_SAFE_INTEGER ? numberValue : value;\n            }\n            return value;\n        };\n        /**\n         * Gets a sorted copy of the data array based on the state of the MatSort. Called\n         * after changes are made to the filtered data or when sort changes are emitted from MatSort.\n         * By default, the function retrieves the active sort and its direction and compares data\n         * by retrieving data using the sortingDataAccessor. May be overridden for a custom implementation\n         * of data ordering.\n         * @param data The array of data that should be sorted.\n         * @param sort The connected MatSort that holds the current sort state.\n         */\n        this.sortData = (data, sort) => {\n            /** @type {?} */\n            const active = sort.active;\n            /** @type {?} */\n            const direction = sort.direction;\n            if (!active || direction == '') {\n                return data;\n            }\n            return data.sort((a, b) => {\n                /** @type {?} */\n                let valueA = this.sortingDataAccessor(a, active);\n                /** @type {?} */\n                let valueB = this.sortingDataAccessor(b, active);\n                /** @type {?} */\n                let comparatorResult = 0;\n                if (valueA != null && valueB != null) {\n                    // Check if one value is greater than the other; if equal, comparatorResult should remain 0.\n                    if (valueA > valueB) {\n                        comparatorResult = 1;\n                    }\n                    else if (valueA < valueB) {\n                        comparatorResult = -1;\n                    }\n                }\n                else if (valueA != null) {\n                    comparatorResult = 1;\n                }\n                else if (valueB != null) {\n                    comparatorResult = -1;\n                }\n                return comparatorResult * (direction == 'asc' ? 1 : -1);\n            });\n        };\n        /**\n         * Checks if a data object matches the data source's filter string. By default, each data object\n         * is converted to a string of its properties and returns true if the filter has\n         * at least one occurrence in that string. By default, the filter string has its whitespace\n         * trimmed and the match is case-insensitive. May be overridden for a custom implementation of\n         * filter matching.\n         * @param data Data object used to check against the filter.\n         * @param filter Filter string that has been set on the data source.\n         * @return Whether the filter matches against the data\n         */\n        this.filterPredicate = (data, filter) => {\n            /** @type {?} */\n            const accumulator = (currentTerm, key) => currentTerm + (/** @type {?} */ (data))[key];\n            /** @type {?} */\n            const dataStr = Object.keys(data).reduce(accumulator, '').toLowerCase();\n            /** @type {?} */\n            const transformedFilter = filter.trim().toLowerCase();\n            return dataStr.indexOf(transformedFilter) != -1;\n        };\n        this._data = new BehaviorSubject(initialData);\n        this._updateChangeSubscription();\n    }\n    /**\n     * Array of data that should be rendered by the table, where each object represents one row.\n     * @return {?}\n     */\n    get data() { return this._data.value; }\n    /**\n     * @param {?} data\n     * @return {?}\n     */\n    set data(data) { this._data.next(data); }\n    /**\n     * Filter term that should be used to filter out objects from the data array. To override how\n     * data objects match to this filter string, provide a custom function for filterPredicate.\n     * @return {?}\n     */\n    get filter() { return this._filter.value; }\n    /**\n     * @param {?} filter\n     * @return {?}\n     */\n    set filter(filter) { this._filter.next(filter); }\n    /**\n     * Instance of the MatSort directive used by the table to control its sorting. Sort changes\n     * emitted by the MatSort will trigger an update to the table's rendered data.\n     * @return {?}\n     */\n    get sort() { return this._sort; }\n    /**\n     * @param {?} sort\n     * @return {?}\n     */\n    set sort(sort) {\n        this._sort = sort;\n        this._updateChangeSubscription();\n    }\n    /**\n     * Instance of the MatPaginator component used by the table to control what page of the data is\n     * displayed. Page changes emitted by the MatPaginator will trigger an update to the\n     * table's rendered data.\n     *\n     * Note that the data source uses the paginator's properties to calculate which page of data\n     * should be displayed. If the paginator receives its properties as template inputs,\n     * e.g. `[pageLength]=100` or `[pageIndex]=1`, then be sure that the paginator's view has been\n     * initialized before assigning it to this data source.\n     * @return {?}\n     */\n    get paginator() { return this._paginator; }\n    /**\n     * @param {?} paginator\n     * @return {?}\n     */\n    set paginator(paginator) {\n        this._paginator = paginator;\n        this._updateChangeSubscription();\n    }\n    /**\n     * Subscribe to changes that should trigger an update to the table's rendered rows. When the\n     * changes occur, process the current state of the filter, sort, and pagination along with\n     * the provided base data and send it to the table for rendering.\n     * @return {?}\n     */\n    _updateChangeSubscription() {\n        /** @type {?} */\n        const sortChange = this._sort ?\n            merge(this._sort.sortChange, this._sort.initialized) :\n            of(null);\n        /** @type {?} */\n        const pageChange = this._paginator ?\n            merge(this._paginator.page, this._paginator.initialized) :\n            of(null);\n        /** @type {?} */\n        const dataStream = this._data;\n        /** @type {?} */\n        const filteredData = combineLatest(dataStream, this._filter)\n            .pipe(map(([data]) => this._filterData(data)));\n        /** @type {?} */\n        const orderedData = combineLatest(filteredData, sortChange)\n            .pipe(map(([data]) => this._orderData(data)));\n        /** @type {?} */\n        const paginatedData = combineLatest(orderedData, pageChange)\n            .pipe(map(([data]) => this._pageData(data)));\n        // Watched for paged data changes and send the result to the table to render.\n        this._renderChangesSubscription.unsubscribe();\n        this._renderChangesSubscription = paginatedData.subscribe(data => this._renderData.next(data));\n    }\n    /**\n     * Returns a filtered data array where each filter object contains the filter string within\n     * the result of the filterTermAccessor function. If no filter is set, returns the data array\n     * as provided.\n     * @param {?} data\n     * @return {?}\n     */\n    _filterData(data) {\n        // If there is a filter string, filter out data that does not contain it.\n        // Each data object is converted to a string using the function defined by filterTermAccessor.\n        // May be overridden for customization.\n        this.filteredData =\n            !this.filter ? data : data.filter(obj => this.filterPredicate(obj, this.filter));\n        if (this.paginator) {\n            this._updatePaginator(this.filteredData.length);\n        }\n        return this.filteredData;\n    }\n    /**\n     * Returns a sorted copy of the data if MatSort has a sort applied, otherwise just returns the\n     * data array as provided. Uses the default data accessor for data lookup, unless a\n     * sortDataAccessor function is defined.\n     * @param {?} data\n     * @return {?}\n     */\n    _orderData(data) {\n        // If there is no active sort or direction, return the data without trying to sort.\n        if (!this.sort) {\n            return data;\n        }\n        return this.sortData(data.slice(), this.sort);\n    }\n    /**\n     * Returns a paged splice of the provided data array according to the provided MatPaginator's page\n     * index and length. If there is no paginator provided, returns the data array as provided.\n     * @param {?} data\n     * @return {?}\n     */\n    _pageData(data) {\n        if (!this.paginator) {\n            return data;\n        }\n        /** @type {?} */\n        const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n        return data.slice().splice(startIndex, this.paginator.pageSize);\n    }\n    /**\n     * Updates the paginator to reflect the length of the filtered data, and makes sure that the page\n     * index does not exceed the paginator's last page. Values are changed in a resolved promise to\n     * guard against making property changes within a round of change detection.\n     * @param {?} filteredDataLength\n     * @return {?}\n     */\n    _updatePaginator(filteredDataLength) {\n        Promise.resolve().then(() => {\n            if (!this.paginator) {\n                return;\n            }\n            this.paginator.length = filteredDataLength;\n            // If the page index is set beyond the page, reduce it to the last page.\n            if (this.paginator.pageIndex > 0) {\n                /** @type {?} */\n                const lastPageIndex = Math.ceil(this.paginator.length / this.paginator.pageSize) - 1 || 0;\n                this.paginator.pageIndex = Math.min(this.paginator.pageIndex, lastPageIndex);\n            }\n        });\n    }\n    /**\n     * Used by the MatTable. Called when it connects to the data source.\n     * \\@docs-private\n     * @return {?}\n     */\n    connect() { return this._renderData; }\n    /**\n     * Used by the MatTable. Called when it is destroyed. No-op.\n     * \\@docs-private\n     * @return {?}\n     */\n    disconnect() { }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\nexport { MatTableModule, _CdkCellDef, _CdkHeaderCellDef, _CdkFooterCellDef, MatCellDef, MatHeaderCellDef, MatFooterCellDef, MatColumnDef, MatHeaderCell, MatFooterCell, MatCell, _CdkTable, MatTable, _CdkHeaderRowDef, _CdkFooterRowDef, _CdkRowDef, MatHeaderRowDef, MatFooterRowDef, MatRowDef, MatHeaderRow, MatFooterRow, MatRow, MatTableDataSource };\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}